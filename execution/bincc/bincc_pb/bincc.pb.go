// Copyright (C) 2021 Aung Maw
// Licensed under the GNU General Public License v3.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.15.8
// source: bincc.proto

package bincc_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CallType int32

const (
	CallType_Init   CallType = 0
	CallType_Invoke CallType = 1
	CallType_Query  CallType = 2
)

// Enum value maps for CallType.
var (
	CallType_name = map[int32]string{
		0: "Init",
		1: "Invoke",
		2: "Query",
	}
	CallType_value = map[string]int32{
		"Init":   0,
		"Invoke": 1,
		"Query":  2,
	}
)

func (x CallType) Enum() *CallType {
	p := new(CallType)
	*p = x
	return p
}

func (x CallType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallType) Descriptor() protoreflect.EnumDescriptor {
	return file_bincc_proto_enumTypes[0].Descriptor()
}

func (CallType) Type() protoreflect.EnumType {
	return &file_bincc_proto_enumTypes[0]
}

func (x CallType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallType.Descriptor instead.
func (CallType) EnumDescriptor() ([]byte, []int) {
	return file_bincc_proto_rawDescGZIP(), []int{0}
}

type UpStream_Type int32

const (
	UpStream_GetState    UpStream_Type = 0
	UpStream_VerifyState UpStream_Type = 1
	UpStream_SetState    UpStream_Type = 2
	UpStream_Result      UpStream_Type = 3
)

// Enum value maps for UpStream_Type.
var (
	UpStream_Type_name = map[int32]string{
		0: "GetState",
		1: "VerifyState",
		2: "SetState",
		3: "Result",
	}
	UpStream_Type_value = map[string]int32{
		"GetState":    0,
		"VerifyState": 1,
		"SetState":    2,
		"Result":      3,
	}
)

func (x UpStream_Type) Enum() *UpStream_Type {
	p := new(UpStream_Type)
	*p = x
	return p
}

func (x UpStream_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpStream_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_bincc_proto_enumTypes[1].Descriptor()
}

func (UpStream_Type) Type() protoreflect.EnumType {
	return &file_bincc_proto_enumTypes[1]
}

func (x UpStream_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpStream_Type.Descriptor instead.
func (UpStream_Type) EnumDescriptor() ([]byte, []int) {
	return file_bincc_proto_rawDescGZIP(), []int{1, 0}
}

type CallData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input       []byte   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Sender      []byte   `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	BlockHash   []byte   `protobuf:"bytes,3,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	BlockHeight uint64   `protobuf:"varint,4,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	CallType    CallType `protobuf:"varint,5,opt,name=callType,proto3,enum=bincc.pb.CallType" json:"callType,omitempty"`
}

func (x *CallData) Reset() {
	*x = CallData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bincc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallData) ProtoMessage() {}

func (x *CallData) ProtoReflect() protoreflect.Message {
	mi := &file_bincc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallData.ProtoReflect.Descriptor instead.
func (*CallData) Descriptor() ([]byte, []int) {
	return file_bincc_proto_rawDescGZIP(), []int{0}
}

func (x *CallData) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *CallData) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *CallData) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *CallData) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *CallData) GetCallType() CallType {
	if x != nil {
		return x.CallType
	}
	return CallType_Init
}

type UpStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte        `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Error string        `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Type  UpStream_Type `protobuf:"varint,4,opt,name=type,proto3,enum=bincc.pb.UpStream_Type" json:"type,omitempty"`
}

func (x *UpStream) Reset() {
	*x = UpStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bincc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpStream) ProtoMessage() {}

func (x *UpStream) ProtoReflect() protoreflect.Message {
	mi := &file_bincc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpStream.ProtoReflect.Descriptor instead.
func (*UpStream) Descriptor() ([]byte, []int) {
	return file_bincc_proto_rawDescGZIP(), []int{1}
}

func (x *UpStream) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *UpStream) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *UpStream) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *UpStream) GetType() UpStream_Type {
	if x != nil {
		return x.Type
	}
	return UpStream_GetState
}

type DownStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DownStream) Reset() {
	*x = DownStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bincc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownStream) ProtoMessage() {}

func (x *DownStream) ProtoReflect() protoreflect.Message {
	mi := &file_bincc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownStream.ProtoReflect.Descriptor instead.
func (*DownStream) Descriptor() ([]byte, []int) {
	return file_bincc_proto_rawDescGZIP(), []int{2}
}

func (x *DownStream) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *DownStream) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_bincc_proto protoreflect.FileDescriptor

var file_bincc_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x69, 0x6e, 0x63, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x62,
	0x69, 0x6e, 0x63, 0x63, 0x2e, 0x70, 0x62, 0x22, 0xa8, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x62, 0x69, 0x6e, 0x63, 0x63, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x08, 0x55, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x69,
	0x6e, 0x63, 0x63, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3f, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x10, 0x03, 0x22, 0x38, 0x0a, 0x0a, 0x44,
	0x6f, 0x77, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x2a, 0x2b, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49,
	0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x10, 0x02, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bincc_proto_rawDescOnce sync.Once
	file_bincc_proto_rawDescData = file_bincc_proto_rawDesc
)

func file_bincc_proto_rawDescGZIP() []byte {
	file_bincc_proto_rawDescOnce.Do(func() {
		file_bincc_proto_rawDescData = protoimpl.X.CompressGZIP(file_bincc_proto_rawDescData)
	})
	return file_bincc_proto_rawDescData
}

var file_bincc_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_bincc_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_bincc_proto_goTypes = []interface{}{
	(CallType)(0),      // 0: bincc.pb.CallType
	(UpStream_Type)(0), // 1: bincc.pb.UpStream.Type
	(*CallData)(nil),   // 2: bincc.pb.CallData
	(*UpStream)(nil),   // 3: bincc.pb.UpStream
	(*DownStream)(nil), // 4: bincc.pb.DownStream
}
var file_bincc_proto_depIdxs = []int32{
	0, // 0: bincc.pb.CallData.callType:type_name -> bincc.pb.CallType
	1, // 1: bincc.pb.UpStream.type:type_name -> bincc.pb.UpStream.Type
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_bincc_proto_init() }
func file_bincc_proto_init() {
	if File_bincc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bincc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bincc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bincc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bincc_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bincc_proto_goTypes,
		DependencyIndexes: file_bincc_proto_depIdxs,
		EnumInfos:         file_bincc_proto_enumTypes,
		MessageInfos:      file_bincc_proto_msgTypes,
	}.Build()
	File_bincc_proto = out.File
	file_bincc_proto_rawDesc = nil
	file_bincc_proto_goTypes = nil
	file_bincc_proto_depIdxs = nil
}
